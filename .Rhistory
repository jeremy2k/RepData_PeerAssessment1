library(RPostgreSQL)
con<-dbConnect(PostgreSQL(),host="10.1.21.57",user="xiongfei_zhuang",password="dp!@9ZXueQ7sA",dbname="dianpingdw")
rs1<-dbSendQuery(con,"select b.mon, count(distinct b.guid) as weibo_guid");
from xiongfei_zhuang.wedding_uv_sina_microblog_sm b
group by 1;
rs1<-dbSendQuery(con,"select b.mon, count(distinct b.guid) as weibo_guid from xiongfei_zhuang.wedding_uv_sina_microblog_sm b group by 1");
x<-fetch(rs1,n=-1);
x
rs1<-dbSendQuery(con,"select b.mon, count(distinct b.guid) as weibo_guid from xiongfei_zhuang.wedding_uv_sina_microblog_sm b group by 1 order by 1");
x<-fetch(rs1,n=-1);
x
str(x)
a<-x(1,)
a<-x[1,];
a
a<-x[,1];
a
b<x[,2];
b<-x[,2];
b
plot(a,b)
plot(b)
line(b)
lines(a,b);
lines(b);
library(RPostgreSQL)
con<-dbConnect(PostgreSQL(),host="10.1.21.57",user="xiongfei_zhuang",password="dp!@9ZXueQ7sA",dbname="dianpingdw")
dt<-read.table("E:/xiongfei/rawdata/suzhou.txt",header=TRUE);
dbWriteTable(con,"xiongfei_suzhou",dt,header=TRUE);
x<-rnorm(100, mean=5, sd=0.1)
mean(x)
sd(x)
summary(x)
demo(graphics)
max-men-size=6Gb
age<-c(1,3,5,,2,11,9,3,9,12,3)
age<-c(1,3,5,4,2,11,9,3,9,12,3)
weight<-(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
weight<-(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
weight<-c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
weight
mean(weight);
sd(weight);
summary(weight)
cor(age,weight)
age<-c(1,3,5,2,11,9,3,9,12,3)
cor(age,weight);
plot(age.weight);
plot(age,weight);
demo()
demo()
demo(image)
help.start()
install.packages("vcd")
library(vcd)
help(Arthritis)
Arthritis
example(Arthritis)
help(package="vcd")
example(Arthritis)
par(mfrow=c(2,2))
hist(mtcars$mpg)
mtcars$mpg
mtcars
hist(mtcars$mpg, breaks=12, col='red', xlab='Miles Per Gallon' main='Colored
hist(mtcars$mpg, breaks=12, col='red', xlab='Miles Per Gallon' main='Colored histogram with 12 bins")
hist(mtcars$mpg, breaks=12, col="red", xlab="iles Per Gallon" main="Colored histogram with 12 bins")
hist(mtcars$mpg, breaks=12, col="red", xlab="Miles Per Gallon", main="Colored histogram with 12 bins")
hist(mtcars$mpg, freq=FALSE, breaks=12, col="red", xlab="Miles Per Gallon", main="Colored histogram with 12 bins")
rug(jitter(mtcars$mpg))
lines(density(mtcars$mpg), col="blue", lwd=2)
x<-mtcars$mpg
h<-hist(x, breaks=12, col="red", xlab="Miles Per Gallon", main="Histogram with normal curve and box")
xfit<-seq(min(x), max(x), length=40)
yfit<-dnorm(xfit, mean=mean(x), sd=sd(x))
xfit
x
yfit<-yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="buue", lwd=2)
lines(xfit, yfit, col="blue", lwd=2)
box()
dtgz<-read.table("E:/xiongfei/rawdata/mbshoppv_gz_201304.csv",header=TRUE);
head(dtgz,10)
pvgz<-dtgz[,2]
head(pvgz,10)
sum(pvgz)
pvgzpct<-pvgz/sum(pvgz)
head(pvgzpct,10)
cumpvgzpct<-cumsum(pvgzpct)
head(cumpvgzpct,10)
plot(cumpvgzpct, main="广州商户累计流量占比", xlab="累计商户数",ylab="累计PV占比")
plot(cumpvgzpct, main="广州商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
sum(pvgz)
dtwh<-read.table("E:/xiongfei/rawdata/mbshoppv_wh_201304.csv",header=TRUE);
pvwh<-dtwh[,2]
pvwhpct<-pvwh/sum(pvwh)
cumpvwhpct<-cumsum(pvwhpct)
head(cumpvwhpct,10)
head(pvwhpct,10)
plot(cumpvgzpct, main="武汉商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
sum(pvwh)
dtsh<-read.table("E:/xiongfei/rawdata/mbshoppv_sh_201304.csv",header=TRUE);
pvsh<-dtsh[,2]
pvshpct<-pvsh/sum(pvsh)
cumpvshpct<-cumsum(pvshpct)
plot(cumpvgzpct, main="上海商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
plot(cumpvshpct, main="上海商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
plot(cumpvwhpct, main="武汉商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
cumpvwhpct
head(cumpvwhpct,2400)
plot(cumpvshpct, main="上海商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
head(cumpvshpct,6500)
head(cumpvshpct,7000)
head(cumpvshpct,7300)
head(cumpvshpct,7500)
head(cumpvshpct,7800)
length(cumpvshpct)
dtsh<-read.table("E:/xiongfei/rawdata/mbshoppv_sh_201304.csv",header=TRUE);
pvsh<-dtsh[,2]
pvshpct<-pvsh/sum(pvsh)
cumpvshpct<-cumsum(pvshpct)
plot(cumpvshpct, main="手机上海美食商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
dtmssh<-read.table("E:/xiongfei/rawdata/msshoppv_sh_201304.csv",head=TRUE);
pvmssh<-dtmssh[,2]
head(pvmssh,10)
head(dtmssh,10)
pvmssh<-dtmssh[,3]
head(pvmssh,10)
pvmsshpct<-pvmssh/sum(pvmssh)
cumpvmsshpct<-cumsum(pvmsshpct)
plot(cumpvmsshpct, main="主站上海美食商户累计流量占比", xlab="累计商户数",ylab="累计PV占比",col="sky blue")
head(cumpvshpct,4000)
head(cumpvshpct,5000)
head(cumpvshpct,6000)
head(cumpvshpct,7000)
head(cumpvshpct,7500)
head(cumpvshpct,7600)
head(cumpvshpct,7700)
dtmssh<-read.table("E:/xiongfei/rawdata/tongcheng.csv",head=TRUE);
dttc<-read.table("E:/xiongfei/rawdata/tongcheng.csv",head=TRUE);
dttc<-read.table("E:/xiongfei/rawdata/tongcheng.csv",head=TRUE);
head(dttc, 10)
str(dttc)
head(dttc(,2),10)
head(dttc[,2],10)
con<-dbConnect(PostgreSQL(),host="10.1.21.57",user="xiongfei_zhuang",password="dp!@9ZXueQ7sA",dbname="dianpingdw")
library(RPostgreSQL)
con<-dbConnect(PostgreSQL(),host="10.1.21.57",user="xiongfei_zhuang",password="dp!@9ZXueQ7sA",dbname="dianpingdw")
help(read.table)
help(read.table)
dttc<-read.table("E:/xiongfei/rawdata/tongcheng.csv",head=TRUE);
dttc<-read.table("E:/xiongfei/rawdata/tongcheng.csv",head=TRUE);
dttc<-read.table("E:/xiongfei/rawdata/tongcheng.csv",head=TRUE);
dttc<-read.table("E:/xiongfei/rawdata/tongcheng.xlsx",head=TRUE);
head(dttc,10)
dttc<-read.table("E:/xiongfei/rawdata/tongcheng.csv",head=TRUE);
head(dttc)
length(dttc)
count(dttc)
dttc
dbWriteTable(con,"xiongfei_tongcheng",dt,header=TRUE);
dbWriteTable(con,"tongcheng",dttc,header=TRUE);
library(RPostgreSQL)
con<-dbConnect(PostgreSQL(),host="10.1.21.57",user="xiongfei_zhuang",password="dp!@9ZXueQ7sA",dbname="dianpingdw")
rsmsuser<-dbSendQuery(con,"select * from xiongfei_zhuang.dp_ugc order by c_ugc_pct desc");
msuser<-fetch(rsmsuser,n=-1);
head(msuser,10);
y<-msuser(8,)
y<-msuser[8,]
head(y,10)
x<-msuser[,8];
head(x,10);
cumuserpct<-cumsum(x);
head(cumuserpct,10);
plot(x);
plot(cumuserpct);
library(RPostgreSQL)
con<-dbConnect(PostgreSQL(),host="10.1.21.57",user="xiongfei_zhuang",password="dp!@9ZXueQ7sA",dbname="dianpingdw")
rsmsuser<-dbSendQuery(con,"select * from xiongfei_zhuang.dp_ugc order by c_ugc_pct desc");
msuser<-fetch(rsmsuser,n=-1);
x<-msuser[,8];
head(x,10);
cumuserpct<-cumsum(x);
plot(cumuserpct);
cumuserpct[3000000]
cumuserpct[300000]
cumuserpct[350000]
cumuserpct[380000]
cumuserpct[360000]
cumuserpct[365000]
cumuserpct[37000]
cumuserpct[370000]
cumuserpct[368000]
cumuserpct[367500]
cumuserpct[367200]
cumuserpct[367100]
cumuserpct[367050]
cumuserpct[367055]
cumuserpct[367058]
cumuserpct[367060]
cumuserpct[367065]
cumuserpct[367075]
dt1<-read.table("E:/xiongfei/rawdata/ctrip.csv",head=TRUE);
dt2<-read.table("E:/xiongfei/rawdata/yilong.csv",head=TRUE);
dt2<-read.table("E:/xiongfei/rawdata/yilong.csv",head=TRUE);
dbWriteTable(con,"ctrip",dt1,header=TRUE);
dbWriteTable(con,"yilong",dt2,header=TRUE);
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
req(0, times=40)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>6
num_vect>=6
my_char<-("My","name","is")
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Jeremy")
my_name
paste(my_name, collapse=
" ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, seq="-")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_date==NA
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c{"foo","bar")]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-(date=1:20,nrow=4,ncol=5)
my_matrix2<-(1:20,4,5)
?matrix
my_matrix2<-(1:20,nrow=4,ncol=5)
my_matrix2<-matrix(data=1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-("patient","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cname, my_data)
?colnames
colnames(my_data)<-cnames
my_data
my_data<-matrix(1:20,nrow=4,ncol=5)
my_data1<-matrix(data=1:20,nrow=4,ncol=5)
identical(my_data,my_data1)
q()
a<-numeric(5)
a
columnmean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmean(airquality)
columnmean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i], na.rm=TRUE)
}
means
}
colummean(airquality)
columnmean(airquality)
q()
x<-c(rnorm(10),runif(10),rnorm(10,1))
x
str(c)
str(x)
help(gl)
f<-gl(3,10)
f
tapply(x,f,mean)
tapply(x,f,range)
mapply(rep,1:4,4:1)
q()
getwd()
utils:::menuInstallPkgs()
library(xml)
utils:::menuInstallPkgs()
fileUrl<-"http://www.w3schools.com/xml/simple.xml"
library(XML)
doc<-xmlTreeParse(fileUrl,useInternal=
TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[1]
rootNode[[2]]
rootNode[2]
rootNode[[1]][[1]]
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"/name",xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"//price",xmlValue)
q()
?nchar()
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
htmlCode
str(htmlCode)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
q()
q()
library(kernlab)
data(spam_
)
data(spam)
set.seed(3435)
trainIndicator=rbinom(4601,size=1,prob=0.5)
table(trainIndicator)
trainSpam<-spam[trainIndicator==1,]
testSpam<-spam[trainIndicator==0,]
dim(trainSpam)
dim(testSpam)
hClusterU<-hclust(dist(t(log10(trainSpam[1:55,]+1))))
plot(hClusterU)
hClusterU<-hclust(dist((log10(trainSpam[1:55,]+1)))
)
hClusterU<-hclust(dist(log10(trainSpam[1:55,]+1)))
hClusterU<-hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hClusterU)
hClusterU<-hclust(dist(log10(trainSpam[1:55,1:55]+1)))
plot(hClusterU)
costFunction=function(x,y)sum(x!=(y>0.5))
costFunction
costFunction(1,2)
y<-2
y>0.5
x<-1
x
x!=(y>0.5)
x==(y>0.5)
trainSpam$numType=as.numeric(trainSpam$type)-1
cvError=rep(NA,55)
library(boot)
for(i in 1:55){
lmFormula=reformulate(names(trainSpam)[i],response="numType")
glmFit=glm(lmFormula,family="binomial",data=trainSpam)
cvError[i]=cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]}
names(trainSpam)[which.min(cvError)]
preModel<-glm(numType~charDollar,family="binomial",data=trainSpam)
preTest<-predict(preModel,testSpam)
preSpam<-rep("nonspam",dim(testSpam)[1])
preSpam[preTest$fitted>0.5]="spam"
preSpam[preModel$fitted>0.5]="spam"
table(preSpam,testSpam$type)
q()
help(pairs)
library(kernlab)
data(spam
)
set.seed(3435)
trainIndicator=rbinom(4601,size=1,prob=0.5)
trainSpam=spam[trainIndicator==1,]
trainSpam=spam[trainIndicator==0,]
trainSpam=spam[trainIndicator==1,]
testSpam=spam[trainIndicator==0,]
plot(log10(trainSpam[,1:4]+1))
pairs(log10(trainSpam[,1:4]+1))
sys.time()
Sys.time()
q()
help(apply)
help(ddply)
help(aggregate)
help(mean)
help(barplot)
help(aggregate)
help(which)
q()
setwd("D:/R/Assignment/ReproducibleResearchAssignment1")
activityds<-read.csv("activity.csv")
stepsum_byday<-aggregate(activityds$steps,list(date=activityds$date),sum)
barplot(height=stepsum_byday$x,names.arg=stepsum_byday$date)
median_stepsum_byday3
activityds1<-merge(activityds,stepmean_byinterval,by.x='interval',by.y='interval')
for(i in 1:dim(activityds1)[1]){if(is.na(activityds1[i,2])) activityds1[i,2]<-activityds1[i,4]
+ i<i+1}
activityds<-read.csv("activity.csv")
stepsum_byday<-aggregate(activityds$steps,list(date=activityds$date),sum)
barplot(height=stepsum_byday$x,names.arg=stepsum_byday$date)
mean_stepsum_byday<-mean(stepsum_byday$x,na.rm=TRUE)
median_stepsum_byday<-median(stepsum_byday$x,na.rm=TRUE)
stepmean_byinterval<-aggregate(activityds$steps~activityds$interval,data=activityds,FUN=mean,na.action=na.omit)
names(stepmean_byinterval)<-c("interval","msteps")
plot(stepmean_byinterval,type="l",xlab="5-minute interval",ylab="averaged steps")
stepmax_byinterval<-which.max(stepmean_byinterval$msteps)
max_interval<-stepmean_byinterval[stepmax_byinterval,1]
activityds1<-merge(activityds,stepmean_byinterval,by.x='interval',by.y='interval')
for(i in 1:dim(activityds1)[1]){if(is.na(activityds1[i,2])) activityds1[i,2]<-activityds1[i,4]
+ i<i+1}
activityds2<-activityds1[,2:3]
activityds3<-cbind(activityds2,activityds1[,1])
names(activityds3)[3]<-c("interval")
stepsum_byday3<-aggregate(activityds3$steps,list(date=activityds3$date),sum)
barplot(height=stepsum_byday3$x,names.arg=stepsum_byday3$date)
mean_stepsum_byday3<-mean(stepsum_byday3$x,na.rm=TRUE)
median_stepsum_byday3<-median(stepsum_byday3$x,na.rm=TRUE)
weekdays(activityds3$date[2])
weekdays(as.POSIXlt(activityds3$date[2])
)
weekdays(as.POSIXlt(activityds3$date[2]))
weekdays(as.POSIXlt(activityds3$date[3]))
weekdays_activityds3<-weekdays(as.POSIXlt(activityds3$date))
dim(weekdays_activityds3)
str(weekdays_activityds3)
activityds4<-cbind(activityds3,weekdays_activityds3)
str(weekdays_activityds4)
str(activityds4)
activityds4<-repeat("weekday",17568)
activityds4<-repeat(c("weekday"),17568)
help(repeat)
help(repeat)
?repeat
q
activityds4<-rep(c("weekday"),17568)
str(activityds4)
activityds4<-as.factor(rep(c("weekday"),17568))
str(activityds4)
